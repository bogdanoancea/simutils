% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xmlValidate.R
\name{xmlValidate}
\alias{xmlValidate}
\title{Validate an xml file using an xsd schema file.}
\usage{
xmlValidate(xsdName, xmlObject, configParamList)
}
\arguments{
\item{xsdName}{Path of the xsd file containing the schema.}

\item{xmlObject}{Object of class \code{xml_document} from package
\code{xml2} or of class \code{character} specifying the path of the xml file
to validate.}

\item{configParamList}{\code{list} which must have a component named
\code{Path}, which, in turn, must contain a list with a component named
\code{XML_VALIDATOR} (see example below).}

\item{jarName}{Filename of jar file.}
}
\description{
\code{xmlvalidate} validates an xml file using an xsd schema
file.

This function is a wrapper for a validator written in Java. Thus, it needs a
jar file, which runs in the command line. If the xml file does not conform to
the schema definition, it provides information where the error is.

The xsdName and xmlObject arguments must be provided with absolute paths.

The jarName argument only needs the name of the file because it must be
placed in the folder structure of the simulation.
}
\details{
Return TRUE if xml file is validated; otherwise, FALSE.
}
\examples{
rootPath <- system.file(package = "simutils")  
config   <- list(Path = list(XML_VALIDATOR = file.path(rootPath, "bin")))
xsdName  <- file.path(rootPath, 
    "extdata/metadata/input_files/schema_definition", "antennas_dict.xsd")
input_folder <- file.path(rootPath, "extdata/input_files", "antennas.xml")
xmlValidate(xsdName, xmlObject, config)

}

# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

        
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

     - name: 'check-r-package'
        description: 'Action to check R package with rcmdcheck. Assumes that rcmdcheck has already been installed.'
        author: 'Jim Hester'
        inputs:
          args:
            description: 'Arguments to pass to the `args` parameter of rcmdcheck'
            default: '"--no-multiarch", "--as-cran"'
          build_args:
            description: 'Arguments to pass to the `build_args` parameter of rcmdcheck'
            default: '"--no-multiarch"'
          error-on:
            description: 'What type of result should cause a build error?'
            default: '"warning"'
          check-dir:
            description: 'Where should the check output go?'
            default: '"check"'
        runs:
          using: "composite"
          steps:
            - name: Check
              env:
                _R_CHECK_CRAN_INCOMING_: false
              run: |
                options(crayon.enabled = TRUE)
                rcmdcheck::rcmdcheck(args = c(${{ inputs.args }}), build_args = c(${{ inputs.build_args }}), error_on = ${{ inputs.error-on }}, check_dir = ${{ inputs.check-dir }})
              shell: Rscript {0}
      
      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check